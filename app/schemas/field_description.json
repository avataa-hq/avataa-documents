{
  "Document": {
    "href": "Hyperlink reference.",
    "id": "Unique identifier.",
    "@baseType": "When sub-classing, this defines the super-class.",
    "@schemaLocation": "A URI to a JSON-Schema file that defines additional attributes and relationships.",
    "@type": "When sub-classing, this defines the sub-class Extensible name.",
    "attachment": "An attachment by value or by reference. An attachment complements the description of an element, for example through a document, a video, a picture.",
    "category": "The category for grouping recommendations.",
    "characteristic": "Describes a given characteristic of an object or entity through a name/value pair.",
    "creationDate": "The date and time the document was created. A date and time formatted in compliance with the ISO8601 standard must be used.",
    "description": "A string. free-text description of the document.",
    "document": "A list of document references.",
    "documentSpecification": "A DocumentSpecificationRefOrValue where you can select between a DocumentSpecification (by Value) or a DocumentSpecificationRef (by Reference).",
    "documentType": "Name of the document type.",
    "externalIdentifier": "An identification of an entity that is owned by or originates in a software system different from the current system, for example a ProductOrder handed off from a commerce platform into an order handling system. The structure identifies the system itself, the nature of the entity within the system (e.g., class name) and the unique ID of the entity within the system. It is anticipated that multiple external IDs can be held for a single entity, e.g., if the entity passed through multiple systems on the way to the current system. In this case the consumer is expected to sequence the IDs in the array in reverse order of provenance, i.e., most recent system first in the list.",
    "lastUpdate": "The date and time the document was last modified. A date and time formatted in compliance with the ISO8601 standard must be used.",
    "name": "A string used to give a name to the document.",
    "relatedEntity": "A reference to an entity, where the type of the entity is not known in advance.",
    "relatedParty": "Related Entity reference. A related party defines party or party role linked to a specific entity.",
    "status": "The life cycle state of the document.",
    "version": "A particular form or variety of an artefact that is different from others or from the original. The form represents differences in properties that characterize an artefact, that are not enough to warrant creating a new artefact"
  },
  "AttachmentRefOrValue": {
    "@referredType": "The actual type of the target instance when needed for disambiguation.",
    "description": "A narrative text describing the content of the attachment.",
    "href": "URI for this Attachment.",
    "id": "Unique identifier for this particular attachment.",
    "url": "Remote reference to the content if web-addressable.",
    "name": "The name of the attachment.",
    "@baseType": "When sub-classing, this defines the super-class.",
    "@schemaLocation": "A URI to a JSON-Schema file that defines additional attributes and relationships.",
    "@type": "When sub-classing, this defines the sub-class Extensible name.",
    "attachmentType": "Attachment type such as video, picture.",
    "content": "The actual contents of the attachment object, if embedded, encoded as base64.",
    "mimeType": "Attachment mime type such as extension file for video, picture and document.",
    "size": "The size of the attachment.",
    "validFor": "The period of time for which the attachment is valid."
  },
  "Characteristic": {
    "@baseType": "When sub-classing, this defines the super-class.",
    "@schemaLocation": "A URI to a JSON-Schema file that defines additional attributes and relationships.",
    "@type": "When sub-classing, this defines the sub-class Extensible name.",
    "characteristicRelationship": "Another Characteristic that is related to the current Characteristic.",
    "id": "Unique identifier of the characteristic.",
    "name": "Name of the characteristic.",
    "value": "The value of the characteristic.",
    "valueType": "Data type of the value of the characteristic."
  },
  "CharacteristicRelationship": {
    "href": "Hyperlink reference.",
    "id": "Unique identifier of the characteristic.",
    "@baseType": "When sub-classing, this defines the super-class.",
    "@schemaLocation": "A URI to a JSON-Schema file that defines additional attributes and relationships.",
    "@type": "When sub-classing, this defines the sub-class Extensible name.",
    "relationshipType": "The type of relationship."
  },
  "CharacteristicSpecification": {
    "@valueSchemaLocation": "This (optional) field provides a link to the schema describing the value type.",
    "configurable": "If true, the Boolean indicates that the target Characteristic is configurable.",
    "description": "A narrative that explains the CharacteristicSpecification.",
    "extensible": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource.",
    "id": "Unique ID for the characteristic.",
    "isUnique": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic.",
    "maxCardinality": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality.",
    "minCardinality": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality.",
    "name": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications.",
    "regex": "A rule or principle represented in regular expression used to derive the value of a characteristic value.",
    "valueType": "A kind of value that the characteristic can take on, such as numeric, text and so forth.",
    "@baseType": "When sub-classing, this defines the super-class.",
    "@schemaLocation": "A URI to a JSON-Schema file that defines additional attributes and relationships.",
    "@type": "When sub-classing, this defines the sub-class Extensible name.",
    "charSpecRelationship": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
    "characteristicValueSpecification": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
    "validFor": "The period of time for which a characteristic is applicable."
  },
  "CharacteristicSpecificationRelationship": {
    "@baseType": "When sub-classing, this defines the super-class.",
    "@schemaLocation": "A URI to a JSON-Schema file that defines additional attributes and relationships.",
    "@type": "When sub-classing, this defines the sub-class Extensible name.",
    "characteristicSpecificationId": "Unique identifier of the characteristic within the specification.",
    "name": "Name of the target characteristic within the specification.",
    "parentSpecificationHref": "Hyperlink reference to the parent specification containing the target characteristic.",
    "parentSpecificationId": "Unique identifier of the parent specification containing the target characteristic.",
    "relationshipType": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity.",
    "validFor": "The period for which the object is valid."
  },
  "CharacteristicValueSpecification": {
    "@baseType": "When sub-classing, this defines the super-class.",
    "@schemaLocation": "A URI to a JSON-Schema file that defines additional attributes and relationships.",
    "@type": "When sub-classing, this defines the sub-class Extensible name.",
    "isDefault": "If true, the Boolean Indicates if the value is the default value for a characteristic.",
    "rangeInterval": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\".",
    "regex": "A regular expression constraint for given value.",
    "unitOfMeasure": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot.",
    "validFor": "The period of time for which a value is applicable.",
    "value": "A discrete value that the characteristic can take on, or the actual value of the characteristic.",
    "valueFrom": "The low range value that a characteristic can take on.",
    "valueTo": "The upper range value that a characteristic can take on.",
    "valueType": "A kind of value that the characteristic value can take on, such as numeric, text and so forth."
  },
  "DocumentSpecificationRefOrValue": {
    "@referredType": "The actual type of the target instance when needed for disambiguation.",
    "name": "Name given to the specification.",
    "href": "Hyperlink reference.",
    "id": "Unique identifier.",
    "@baseType": "When sub-classing, this defines the super-class.",
    "@schemaLocation": "A URI to a JSON-Schema file that defines additional attributes and relationships.",
    "@type": "When sub-classing, this defines the sub-class Extensible name.",
    "version": "Specification version.",
    "description": "Description of the specification.",
    "isBundle": "isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true).",
    "lastUpdate": "Date and time of the last update of the specification.",
    "lifecycleStatus": "The current lifecycle status of this DocumentSpecification.",
    "attachment": "Attachments that may be of relevance to this specification, such as picture, document, media.",
    "constraint": "This is a list of constraint references applied to this specification.",
    "entitySpecRelationship": "Relationship to another specification.",
    "relatedParty": "Parties who manage or otherwise have an interest in this specification.",
    "specCharacteristic": "List of characteristics that the entity can take.",
    "targetEntitySchema": "Pointer to a schema that defines the target entity.",
    "validFor": "The period for which this REST resource is valid."
  },
  "EntitySpecificationRelationship": {
    "@referredType": "The actual type of the target instance when needed for disambiguation.",
    "name": "Name of the related entity.",
    "href": "Hyperlink reference.",
    "id": "Unique identifier.",
    "@baseType": "When sub-classing, this defines the super-class.",
    "@schemaLocation": "A URI to a JSON-Schema file that defines additional attributes and relationships.",
    "@type": "When sub-classing, this defines the sub-class Extensible name.",
    "associationSpec": "A specification for an association used by this relationship.",
    "relationshipType": "Type of relationship such as migration, substitution, dependency, exclusivity.",
    "role": "The association role for this entity specification.",
    "validFor": "The period for which the entitySpecRelationship is valid."
  },
  "ExternalIdentifier": {
    "href": "Hyperlink reference.",
    "id": "Identification of the entity within the external system.",
    "@baseType": "When sub-classing, this defines the super-class.",
    "@schemaLocation": "A URI to a JSON-Schema file that defines additional attributes and relationships.",
    "@type": "When sub-classing, this defines the sub-class Extensible name.",
    "externalIdentifierType": "Type of the identification, typically would be the type of the entity within the external system.",
    "owner": "Name of the external system that owns the entity."
  },
  "Quantity": {
    "amount": "Numeric value in a given unit.",
    "units": "Unit."
  },
  "RelatedEntity": {
    "@referredType": "The actual type of the target instance when needed for disambiguation.",
    "name": "Name of the related entity.",
    "href": "Hyperlink reference.",
    "id": "Unique identifier.",
    "@baseType": "When sub-classing, this defines the super-class.",
    "@schemaLocation": "A URI to a JSON-Schema file that defines additional attributes and relationships.",
    "@type": "When sub-classing, this defines the sub-class Extensible name.",
    "role": "The role of an entity."
  },
  "RelatedParty": {
    "@referredType": "The actual type of the target instance when needed for disambiguation.",
    "name": "Name of the related entity.",
    "href": "Hyperlink reference.",
    "id": "Unique identifier.",
    "@baseType": "When sub-classing, this defines the super-class.",
    "@schemaLocation": "A URI to a JSON-Schema file that defines additional attributes and relationships.",
    "@type": "When sub-classing, this defines the sub-class Extensible name.",
    "role": "Role played by the related party."
  },
  "TargetEntitySchema": {
    "@schemaLocation": "This field provides a link to the schema describing the target entity.",
    "@type": "Class type of the target entity."
  },
  "AssociationSpecificationRef": {
    "@referredType": "The actual type of the target instance when needed for disambiguation.",
    "name": "Name of the related entity.",
    "href": "Hyperlink reference.",
    "id": "Unique identifier.",
    "@baseType": "When sub-classing, this defines the super-class.",
    "@schemaLocation": "A URI to a JSON-Schema file that defines additional attributes and relationships",
    "@type": "When sub-classing, this defines the sub-class Extensible name."
  },
  "CategoryRef": {
    "@referredType": "The actual type of the target instance when needed for disambiguation.",
    "name": "Name of the related entity.",
    "href": "Hyperlink reference.",
    "id": "Unique identifier.",
    "@baseType": "When sub-classing, this defines the super-class.",
    "@schemaLocation": "A URI to a JSON-Schema file that defines additional attributes and relationships",
    "@type": "When sub-classing, this defines the sub-class Extensible name.",
    "version": "Category version."
  },
  "ConstraintRef": {
    "@referredType": "The actual type of the target instance when needed for disambiguation.",
    "name": "Name of the related entity.",
    "href": "Hyperlink reference.",
    "id": "Unique identifier.",
    "@baseType": "When sub-classing, this defines the super-class.",
    "@schemaLocation": "A URI to a JSON-Schema file that defines additional attributes and relationships",
    "@type": "When sub-classing, this defines the sub-class Extensible name.",
    "version": "Category version."
  },
  "DocumentRef": {
    "@referredType": "The actual type of the target instance when needed for disambiguation.",
    "name": "Name of the related entity.",
    "href": "The URI for the object itself.",
    "id": "Identifier of the document.",
    "@baseType": "When sub-classing, this defines the super-class.",
    "@schemaLocation": "A URI to a JSON-Schema file that defines additional attributes and relationships",
    "@type": "When sub-classing, this defines the sub-class Extensible name."
  },
  "DocumentSpecification": {
    "description": "Description of the specification.",
    "isBundle": "isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true).",
    "lastUpdate": "Date and time of the last update of the specification.",
    "lifecycleStatus": "The current lifecycle status of this DocumentSpecification.",
    "name": "The name of the DocumentSpecification.",
    "version": "Specification version.",
    "href": "Hyperlink reference.",
    "id": "Unique identifier.",
    "@baseType": "When sub-classing, this defines the super-class.",
    "@schemaLocation": "A URI to a JSON-Schema file that defines additional attributes and relationships.",
    "@type": "When sub-classing, this defines the sub-class Extensible name.",
    "attachment": "Attachments that may be of relevance to this specification, such as picture, document, media.",
    "constraint": "This is a list of constraint references applied to this specification.",
    "entitySpecRelationship": "Relationship to another specification.",
    "relatedParty": "Parties who manage or otherwise have an interest in this specification.",
    "specCharacteristic": "List of characteristics that the entity can take.",
    "targetEntitySchema": "Pointer to a schema that defines the target entity.",
    "validFor": "The period for which this REST resource is valid."
  },
  "Exception": {
    "code": "Application relevant detail, defined in the API or a common list.",
    "reason": "Explanation of the reason for the error which can be shown to a client user.",
    "message": "More details and corrective actions related to the error which can be shown to a client user.",
    "status": "HTTP Error code extension",
    "referenceError": "URI of documentation describing the error.",
    "@baseType": "When sub-classing, this defines the super-class.",
    "@schemaLocation": "A URI to a JSON-Schema file that defines additional attributes and relationships",
    "@type": "When sub-classing, this defines the sub-class entity name."
  }
}